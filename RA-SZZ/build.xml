<project name="RASZZ" basedir="." default="main">

    <property name="src.dir"     value="src"/>
    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="build.libs.dir"   value="${classes.dir}/libs"/>
    <property name="lib.dir" 	 value="libs"/>
    <property name="main-class"  value="br.ufrn.raszz.miner.szz.RaSZZ"/>
    <property name="myjar" 	 value="${build.dir}/${ant.project.name}.jar"/>
    <property name="super.libs" value="../libs"/>

    <!-- external dependencies -->
    <property name="core-connector" value="../core-connector/build/classes"/>
    <property name="core-connector.libs" value="../core-connector/libs"/>
    <property name="rminer" value="../RefactoringMiner_Adapted/build/classes"/>
    <property name="rminer.libs" value="../RefactoringMiner_Adapted/libs"/>
    <property name="refdiff" value="../refdiff-core/build/classes"/>
    <property name="refdiff.libs" value="../refdiff-core/libs"/>
    <property name="diffj" value="../DiffJ/build/classes"/>
    <property name="diffj.libs" value="../DiffJ/libs"/>

    <path id="classpath">
	    <!-- fileset dir="${lib.dir}" includes="**/*.jar"/>
	    <fileset dir="${core-connector.libs}" includes="**/*.jar"/>
	    <fileset dir="${rminer.libs}" includes="**/*.jar"/>
	    <fileset dir="${refdiff.libs}" includes="**/*.jar"/>
	    <fileset dir="${diffj.libs}" includes="**/*.jar"/-->
	    <fileset dir="${super.libs}" includes="**/*.jar"/>
	    <pathelement path="${core-connector}"/>
	    <pathelement path="${rminer}"/>
	    <pathelement path="${refdiff}"/>
	    <pathelement path="${diffj}"/>
    </path>

    <target name="clean">
	    <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
	    <mkdir dir="${classes.dir}"/>
	    <javac verbose="false" debug="true" 
		    srcdir="${src.dir}" destdir="${classes.dir}" 
		    classpathref="classpath"
		    includes="**/*.java"
		encoding="Windows-1252"/>
	    <copy todir="${classes.dir}">
		    <fileset dir="${src.dir}" excludes="**/*.java"/>
	    </copy>
    </target>


    <!-- create a property containing all .jar files, prefix lib/, and seperated with a space -->
    <pathconvert property="libs.project" pathsep=" ">
	    <mapper>
		    <chainedmapper>

			    <!-- remove absolute path -->
			    <flattenmapper />

			    <!-- add lib/ prefix -->
			    <globmapper from="*" to="../libs/*" />
		    </chainedmapper>
	    </mapper>

	    <path>

		    <!-- lib.home contains all jar files, in several subdirectories -->
		    <fileset dir="${super.libs}">
			    <include name="**/*.jar" />
		    </fileset>
		    <!--fileset dir="${lib.dir}">
			    <include name="**/*.jar" />
		    </fileset>
		    <fileset dir="${core-connector.libs}">
			    <include name="**/*.jar" />
		    </fileset>
		    <fileset dir="${diffj.libs}">
			    <include name="**/*.jar" />
		    </fileset>
		    <fileset dir="${rminer.libs}">
			    <include name="**/*.jar" />
		    </fileset>
		    <fileset dir="${refdiff.libs}">
			    <include name="**/*.jar" />
		    </fileset-->
	    </path>
    </pathconvert>

    <target name="build" depends="compile">
	    <mkdir dir="${build.dir}"/>
	    <mkdir dir="${build.libs.dir}"/>
	    <copy todir="${build.libs.dir}" flatten="true">
		    <fileset dir="${lib.dir}"/>
		    <fileset dir="${core-connector.libs}"/>
		    <fileset dir="${diffj.libs}"/>
		    <fileset dir="${rminer.libs}"/>
		    <fileset dir="${refdiff.libs}"/>
	    </copy>
	    <copy todir="${classes.dir}">
		    <fileset dir="${core-connector}"/>
		    <fileset dir="${rminer}"/>
		    <fileset dir="${refdiff}"/>
		    <fileset dir="${diffj}"/>
	    </copy>

	    <jar destfile="${myjar}" basedir="${classes.dir}">
		    <manifest>
			    <attribute name="Main-Class" value="${main-class}"/>
			    <attribute name="Class-Path" value="${libs.project}" />
		    </manifest>
	    </jar>
    </target>

    <!--target name="run" depends="jar">
	    <java fork="true" class-name="${main-class}">
		    <classpath>
			    <path refid="classpath"/>
			    <path location="${build.dir}/${ant.project.name}.jar"/>
		    </classpath>
	    </java>

    </target>

    <target name="clean-build" depends="clean,jar"/>
    <target name="main" depends="clean,run"/-->

</project>
